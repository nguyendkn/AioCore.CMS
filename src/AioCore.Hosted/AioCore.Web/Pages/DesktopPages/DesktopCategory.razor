@using AioCore.Domain.AggregateModels.CategoryAggregate
@using AioCore.Domain.AggregateModels.PostAggregate
@using AioCore.Domain
@using AioCore.Shared.Extensions

<div class="breadcrumb">
    <h1 class="title-main">
        @{
            var categoryTitle = GetCategory(0);
            <NavLink href="@categoryTitle?.Slug" title="@categoryTitle?.Title">
                @categoryTitle?.Title
            </NavLink>
        }
    </h1>
    <div class="list-bread">
        <ul class="list-zonechild">
            @foreach (var category in Categories.Slice(0, 1))
            {
                if (string.IsNullOrEmpty(category.Slug)) return;
                <li class="item">
                    <a href="@category.Slug" title="@category.Title" class="title ">@category.Title</a>
                </li>
            }
        </ul>
    </div>
</div>
<div class="grid highlight">
    <div class="article-wrap">
        <article class="article grid">
            @for (var i = 0; i < 3; i++)
            {
                var post = GetPost(i);
                if (post is not null)
                {
                    var thumbnailWidth = (i == 0) ? 516 : 252;
                    var thumbnailHeight = (i == 0) ? 344 : 168;
                    <article class="article-item">
                        <div class="article-thumb">
                            <a href="@($"{GetCategory(post.Parent)?.Slug}/{post.Slug}")">
                                <img loading="lazy" width="@thumbnailWidth" height="@thumbnailHeight" alt="@post.Title" src="@post.Thumbnail">
                            </a>
                        </div>
                        <div class="article-content">
                            <h3 class="article-title">
                                <a href="@($"{GetCategory(post.Parent)?.Slug}/{post.Slug}")">@post.Title</a>
                            </h3>
                            @if (i == 0)
                            {
                                <div class="article-excerpt">
                                    <a href="@($"{GetCategory(post.Parent)?.Slug}/{post.Slug}")">@post.Description</a>
                                </div>
                            }
                        </div>
                    </article>
                }
            }
        </article>
        <article class="article column">
            @for (var i = 3; i < 7; i++)
            {
                var post = GetPost(i);
                if (post is not null)
                {
                    <article class="article-item">
                        <div class="article-thumb">
                            <a href="@($"{GetCategory(post.Parent)?.Slug}/{post.Slug}")">
                                <img loading="lazy" width="186" height="124" alt="@post.Title" src="@post.Thumbnail">
                                <div class="article-ico">
                                    <i class="photo"></i>
                                </div>
                            </a>
                        </div>
                        <h3 class="article-title">
                            <a href="@($"{GetCategory(post.Parent)?.Slug}/{post.Slug}")">@post.Title</a>
                        </h3>
                    </article>
                }
            }
        </article>
    </div>
</div>
<div class="grid list" id="bai-viet">
    <div class="main">
        <div class="article list">
            @for (var i = 7; i < 17; i++)
            {
                var post = GetPost(i);
                if (post is not null)
                {
                    <article class="article-item">
                        <div class="article-thumb">
                            <a href="@($"{GetCategory(post.Parent)?.Slug}/{post.Slug}")">
                                <img loading="lazy" width="252" height="168" alt="@post.Title" src="@post.Thumbnail">
                            </a>
                        </div>
                        <div class="article-content">
                            <h3 class="article-title">
                                <a href="@($"{GetCategory(post.Parent)?.Slug}/{post.Slug}")">@post.Title</a>
                            </h3>
                            <div class="article-excerpt">
                                <a href="@($"{GetCategory(post.Parent)?.Slug}/{post.Slug}")">@post.Description</a>
                            </div>
                        </div>
                    </article>
                }
            }
        </div>
        <div class="pagination">
            <a class="page-item active" href="/the-thao/bong-da-trong-nuoc.htm" rel="nofollow">1</a><a class="page-item" href="/the-thao/bong-da-trong-nuoc/trang-2.htm" rel="nofollow">2</a><a class="page-item" href="/the-thao/bong-da-trong-nuoc/trang-3.htm" rel="nofollow">3</a><a class="page-item" href="/the-thao/bong-da-trong-nuoc/trang-4.htm" rel="nofollow">4</a><a class="page-item" href="/the-thao/bong-da-trong-nuoc/trang-5.htm" rel="nofollow">5</a><a class="page-item next" href="/the-thao/bong-da-trong-nuoc/trang-2.htm" rel="nofollow" title="Trang tiếp">❯</a>
        </div>
    </div>
    <div class="sidebar">
    </div>
</div>

@code {

    [Parameter]
    public List<Category> Categories { get; set; } = default!;

    private List<Post> Posts { get; set; } = default!;

    protected override Task OnParametersSetAsync()
    {
        Posts = AioCoreContext.CachedPosts.Select(x => x.Value)
            .Where(x => x.Active && Categories.Select(y => y.Id).Contains(x.Parent)).ToList();
        return base.OnParametersSetAsync();
    }

    private Category? GetCategory(int index)
    {
        index = (Categories.Any() && (Categories.Count() > index)) ? index : -1;
        return index >= 0 ? Categories[index] : null;
    }

    private Category? GetCategory(Guid parent)
    {
        return AioCoreContext.CachedCategories.Select(x => x.Value)
            .FirstOrDefault(x => x.Id.Equals(parent)) ?? null;
    }

    private Post? GetPost(int index)
    {
        index = (Posts.Any() && (Posts.Count() > index)) ? index : -1;
        return index >= 0 ? Posts[index] : null;
    }

}