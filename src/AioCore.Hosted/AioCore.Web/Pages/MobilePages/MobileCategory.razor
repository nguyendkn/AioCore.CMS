@using AioCore.Domain.AggregateModels.CategoryAggregate
@using AioCore.Domain.AggregateModels.PostAggregate
@using AioCore.Domain

<ul class="news-stream">
    <div class="main-block home-box-event">
        <div class="box-event-big">
            <div class="item">
                <h3>
                    <a title="@Posts[0].Title" class="title" href="/bai-viet/@($"{GetCategory(Posts[0].Parent)?.Slug}/{Posts[0].Slug}")">@Posts[0].Title</a>
                </h3>
                <div class="box-img">
                    <a class="img" title="@Posts[0].Title" href="/bai-viet/@($"{GetCategory(Posts[0].Parent)?.Slug}/{Posts[0].Slug}")">
                        <img src="@Posts[0].Thumbnail" alt="@Posts[0].Title">
                    </a>
                    <div class="box-title">
                        <div class="catetime">
                            <span class="cate">
                                <a href="@GetCategory(Posts[0].Parent)?.Slug" title="@GetCategory(Posts[0].Parent)?.Title">@GetCategory(Posts[0].Parent)?.Title</a>
                            </span>
                            <span class="time need-get-timeago" title="@Posts[0].CreatedAt"></span>
                        </div>
                        <div class="sapo">@Posts[0].Description</div>
                    </div>
                </div>
            </div>
        </div>
        <ul class="box-event-small">
            @for (var i = 1; i <= 3; i++)
            {
                <li class="item">
                    <h3>
                        <a title="@Posts[i].Title" class="title" href="/bai-viet/@($"{GetCategory(Posts[i].Parent)?.Slug}/{Posts[i].Slug}")">@Posts[i].Title</a>
                    </h3>
                    <div class="catetime">
                        <span class="time need-get-timeago" title="@Posts[i].CreatedAt"></span>
                    </div>
                    <div class="sapo">@Posts[i].Description</div>
                </li>
            }
        </ul>
    </div>
</ul>
<div class="highlight">
    <ul class="highlight-list">
        @for (var i = 4; i <= 15; i++)
        {
            <li>
                <div class="left">
                    <h3 class="title">
                        <a href="/bai-viet/@($"{GetCategory(Posts[i].Parent)?.Slug}/{Posts[i].Slug}")" title="@Posts[i].Title">@Posts[i].Title</a>
                    </h3>
                    <div class="info">
                        <a href="/anh.htm">Ảnh</a>
                        <span class="time pub-date loaded" title="@Posts[i].CreatedAt">@Posts[i].CreatedAt.ToString("dd/MM/yyyy")</span>
                    </div>
                </div>
                <a href="/bai-viet/@($"{GetCategory(Posts[i].Parent)?.Slug}/{Posts[i].Slug}")" title="@Posts[i].Title" class="right img">
                    <img src="@Posts[i].Thumbnail" alt="@Posts[i].Title">
                </a>
            </li>
        }
    </ul>
</div>
<div class="bottom-space"></div>

@code {

    [Parameter]
    public List<Category> Categories { get; set; } = default!;

    private List<Post> Posts { get; set; } = default!;

    protected override Task OnParametersSetAsync()
    {
        Posts = AioCoreContext.CachedPosts.Select(x => x.Value)
            .Where(x => x.Active && Categories.Select(y => y.Id).Contains(x.Parent)).ToList();
        return base.OnParametersSetAsync();
    }
    
    private Category? GetCategory(int index)
    {
        index = (Categories.Any() && (Categories.Count() > index)) ? index : -1;
        return index >= 0 ? Categories[index] : null;
    }

    private Category? GetCategory(Guid parent)
    {
        return AioCoreContext.CachedCategories.Select(x => x.Value)
            .FirstOrDefault(x => x.Id.Equals(parent)) ?? null;
    }

    private Post? GetPost(int index)
    {
        index = (Posts.Any() && (Posts.Count() > index)) ? index : -1;
        return index >= 0 ? Posts[index] : null;
    }

}